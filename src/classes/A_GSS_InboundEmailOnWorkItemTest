/*********************************************************************************************** 
// Work Item Inbound Emails Test
// CR - 00090231
// Class Name: A_GSS_InboundEmailOnWorkItemTest
// Description: This is a test class for GSS_InboundEmailOnWorkItem
// Author : Shivang Vij - Accenture
// Created on : 17 oct, 2014
***********************************************************************************************/
@isTest(seeAllData=true)
private class A_GSS_InboundEmailOnWorkItemTest{
    
    Public static Work_Item__c wItem1;
    
   /* public static void setupData(){
        
        //creating work item record for testing
        wItem1 = new Work_Item__c(Document_ID__c ='10056781', Feedback__c ='testFeedback', RecordType = new RecordType(Name='Feedback'), Title__c = 'MyWItem' , Category__c = 'Feedback' , Component__c = 'Cloud', Feedback_Points__c='10', State__c = 'Technical Review');
        insert wItem1;
    }
    */
    static testMethod void testEmailServiceWithWrokItem() {
        
         //creating work item record for testing
        wItem1 = new Work_Item__c(Document_ID__c ='10056781', Feedback__c ='testFeedback', RecordType = new RecordType(Name='Feedback'), Title__c = 'MyWItem' , Category__c = 'Feedback' , Component__c = 'Cloud', Feedback_Points__c='10', State__c = 'Technical Review');
        insert wItem1;
        
        test.starttest();
        // create a new email and envelope object
        Messaging.InboundEmail email = new Messaging.InboundEmail() ;
        Messaging.InboundEnvelope env = new Messaging.InboundEnvelope();

        // setup the data for the email
        Work_Item__c w = [Select Id, Name from Work_Item__c where Id=:wItem1.Id];
        email.subject = '#'+w.Name+'#';

        email.fromname = 'FirstName LastName';
        email.plainTextBody = 'Hello, this a test email body. for testing purposes only.Phone:123456 Bye';
        env.fromAddress = 'someaddress@email.com';
    
        // call the email service class and test it with the data in the testMethod
        GSS_InboundEmailOnWorkItem emailProcess = new GSS_InboundEmailOnWorkItem();
        emailProcess.handleInboundEmail(email, env);
        test.stoptest();
        
        /*String emailSubject = 'Inbound Email: '+email.subject;
        Task emailCreated = [Select id, Subject from Task where Subject =: emailSubject];
    
        System.assertEquals(w.Name,emailCreated.Subject.substringBetween('#'));*/
     }
     static testMethod void testEmailServiceWithOutWorkItem(){
        //setupData();
         test.starttest();
         // create a new email and envelope object
        Messaging.InboundEmail email = new Messaging.InboundEmail() ;
        Messaging.InboundEnvelope env = new Messaging.InboundEnvelope();

        // setup the data for the email
        email.subject = '#W1-123123#';

        email.fromname = 'FirstName LastName';
        email.plainTextBody = 'Hello, this a test email body. for testing purposes only.Phone:123456 Bye';
        email.fromAddress = 'TestDummy@test.com';
        env.fromAddress = 'someaddress@email.com';
    
        // call the email service class and test it with the data in the testMethod
        GSS_InboundEmailOnWorkItem emailProcess = new GSS_InboundEmailOnWorkItem();
        emailProcess.handleInboundEmail(email, env);
        test.stoptest();
        
        /*String emailSubject = 'Inbound Email: '+email.subject;
        Task emailCreated = [Select id, Subject from Task where Subject =: emailSubject];
    
        System.assertEquals(w.Name,emailCreated.Subject.substringBetween('#'));*/     
     }
}
